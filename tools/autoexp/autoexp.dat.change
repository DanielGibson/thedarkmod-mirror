;------------------------------------------------------------------------------
;  ID Doom3 (idLib) types
;------------------------------------------------------------------------------

idStr{
	preview (
		#if ($c.data == 0)
		(
			"[null_ptr]"
		)
		#else
		(
			[$c.data,s]
		)
	)
}

idList<*>{
	children
	(
		#(
			[actual members]: [$c,!],
			#if ($c.list == 0)
			(
				$c.list
			)
			#else
			(
			    #array
			    (
					expr: ($c.list)[$i],
					size: $c.num
				)
			)
		)
	)
    preview
    (
    	#if ($c.list == 0)
    	(
			"[null_ptr]"
    	)
    	#else
    	(
	        #(
				"[",
	            $c.num,
	            "](",
	            #array
	            (
					expr: ($c.list)[$i],
					size: $c.num
				),
				")"
			)
		)
	)
}

idStaticList<*,*>{
	children
	(
		#(
			[actual members]: [$c,!],
		    #array
		    (
				expr: ($c.list)[$i],
				size: $c.num
			)
		)
	)
    preview
    (
        #(
			"[",
            $c.num,
            "](",
            #array
            (
				expr: ($c.list)[$i],
				size: $c.num
			),
			")"
		)
	)
}

idHashIndex{
	children
	(
		#(
			[actual members]: [$c,!],
			#if ( $c.hash != $c.INVALID_INDEX )
			(
				#(
					[hash]: (_idHashIndex_showarray_helper*)(&($c.hashSize)),
					[index]: (_idHashIndex_showarray_helper*)(&($c.indexSize))
				)
			)
		)
	)
}
_idHashIndex_showarray_helper{
	children                   
	(
		#array
		(
			expr: $c.ptr[$i],
			size: $c.size
		)
	)	
}


idKeyValue{
	children (
		#(
			[actual members]: [$c,!],
			key: (idStr*)($c.key),
			value: (idStr*)($c.value)
		)
	)
	preview (
		#(
			"{key=",
			(idStr*)($c.key),
			" value=",
			(idStr*)($c.value),
			"}"
		)
	)
}

idDict{
	children (
		#(
			[actual members]: [$c,!],
			[elements]: $c.args
		)
	)
	preview (
		$c.args
	)
}

;------------------------------------------------------------------------------
;  end of custom templates
;------------------------------------------------------------------------------
